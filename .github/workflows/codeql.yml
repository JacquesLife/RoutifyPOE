name: "CodeQL Security Analysis"

on:
  push:
    branches: [ "main", "test" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays at 2 AM UTC

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      # Required for all workflows
      security-events: write
      # Required to fetch internal or private CodeQL packs
      packages: read
      # Required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: ['java-kotlin']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 17 for AGP 8.8.1
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Create a dummy API key for CodeQL build (it won't actually call APIs)
      - name: Create local.properties with dummy API key
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "GOOGLE_MAPS_API_KEY=dummy_key_for_codeql_build" >> local.properties

      # Initialize the CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: manual

      # Manual build steps for Android with Kotlin
      - name: Build Android project
        run: |
          # Clean and build the project for CodeQL analysis
          ./gradlew clean
          ./gradlew compileDebugKotlin compileDebugJavaWithJavac
          # Don't run lint or tests during CodeQL - just compile for analysis

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"